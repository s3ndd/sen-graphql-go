package model

import (
	"time"
)

type CartStatus string

// CartStatus string values
const (
	UnspecifiedCartStatus CartStatus = "CartState_UNSPECIFIED"
	SuspendedCartStatus   CartStatus = "CartState_SUSPENDED"
	AvailableCartStatus   CartStatus = "CartState_AVAILABLE"
	ActiveCartStatus      CartStatus = "CartState_ACTIVE"
	PausedCartStatus      CartStatus = "CartState_PAUSED"
)

// Battery contains the battery details of a cart
type Battery struct {
	CartID          string     `json:"cart_id"`
	BatteryIdx      int        `json:"battery_idx"`
	Charging        bool       `gorm:"not null;type:tinyint;default:0" json:"charging"`
	Percentage      int        `json:"percentage"`
	CellMillivolts  int64      `json:"cell_millivolts"`
	InputMillivolts int64      `json:"input_millivolts"`
	Temperature     int64      `json:"temperature"`
	Created         time.Time  `json:"created"`
	Updated         time.Time  `json:"updated"`
	Deleted         *time.Time `json:"deleted"`
}

// Wifi contains the wifi details generated by a cart
type Wifi struct {
	CartID      string     `json:"cart_id"`
	WifiIdx     int        `json:"wifi_idx"`
	CurrentRssi float64    `json:"current_rssi"`
	AverageRssi float64    `json:"average_rssi"`
	Created     time.Time  `json:"created"`
	Updated     time.Time  `json:"updated"`
	Deleted     *time.Time `json:"deleted"`
}

// Temperature contains the temperature details generated by a cart
type Temperature struct {
	CartID         string     `json:"cart_id"`
	TemperatureIdx int        `json:"temperature_idx"`
	Measurement    float64    `json:"measurement"`
	Code           string     `json:"code"`
	Created        time.Time  `json:"created"`
	Updated        time.Time  `json:"updated"`
	Deleted        *time.Time `json:"deleted"`
}

// Camera contains the camera details of a cart
type Camera struct {
	CartID        string     `json:"cart_id"`
	CameraIdx     int        `json:"camera_idx"`
	CameraKey     string     `json:"camera_key"`
	CameraFps     int        `json:"camera_fps"`
	CameraTemp    int        `json:"camera_temp"`
	CameraRunning bool       `json:"camera_running"`
	Created       time.Time  `json:"created"`
	Updated       time.Time  `json:"updated"`
	Deleted       *time.Time `json:"deleted"`
}

// Cart contains the details about a cart
type Cart struct {
	ID              string         `json:"id"`
	SiteID          string         `json:"site_id"`
	Code            string         `json:"code"`
	Name            string         `json:"name"`
	SessionID       *string        `json:"session_id"`
	SessionURL      string         `json:"session_url"`
	LanguagePack    string         `json:"language_pack"`
	Status          CartStatus     `json:"status"`
	SoftwareVersion *string        `json:"software_version"`
	Batteries       []*Battery     `json:"batteries"`
	Cameras         []*Camera      `json:"cameras"`
	Temperatures    []*Temperature `json:"temperatures"`
	Wifis           []*Wifi        `json:"wifis"`
	Created         time.Time      `json:"created"`
	Updated         time.Time      `json:"updated"`
	Deleted         *time.Time     `json:"deleted"`
}

type CartConnection struct {
	Carts []Cart `json:"carts"`
}

// CartRegistration represents the internal structure of a cart
type CartRegistration struct {
	ID         string    `json:"id"`
	QRCode     string    `json:"qr_code"`
	SiteID     string    `json:"site_id"`
	Site       *Site     `json:"site,omitempty"`
	RetailerID string    `json:"retailer_id"`
	Retailer   *Retailer `json:"retailer,omitempty"`
	Created    time.Time `json:"created"`
	Updated    time.Time `json:"updated"`
	Deleted    bool      `json:"deleted"`
}

// CartsRegistration contains the model of pagination and stores slices of carts
type CartsRegistration struct {
	Pagination Pagination         `json:"pagination"`
	Carts      []CartRegistration `json:"carts"`
}
